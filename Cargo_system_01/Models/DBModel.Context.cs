//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cargo_system_01.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Cargo_system01Entities3 : DbContext
    {
        public Cargo_system01Entities3()
            : base("name=Cargo_system01Entities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<bill> bills { get; set; }
        public virtual DbSet<carproperty> carproperties { get; set; }
        public virtual DbSet<cartype> cartypes { get; set; }
        public virtual DbSet<city> cities { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<driver> drivers { get; set; }
        public virtual DbSet<loadstatu> loadstatus { get; set; }
        public virtual DbSet<loadtype> loadtypes { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<packagetype> packagetypes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<View_bills> View_bills { get; set; }
        public virtual DbSet<View_driver> View_driver { get; set; }
        public virtual DbSet<View_num_car> View_num_car { get; set; }
        public virtual DbSet<View_num_orders> View_num_orders { get; set; }
        public virtual DbSet<View_orders> View_orders { get; set; }
    
        [DbFunction("Cargo_system01Entities3", "fn_cartype")]
        public virtual IQueryable<fn_cartype_Result> fn_cartype(Nullable<int> cartypeid)
        {
            var cartypeidParameter = cartypeid.HasValue ?
                new ObjectParameter("cartypeid", cartypeid) :
                new ObjectParameter("cartypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_cartype_Result>("[Cargo_system01Entities3].[fn_cartype](@cartypeid)", cartypeidParameter);
        }
    
        [DbFunction("Cargo_system01Entities3", "fn_orders_customer")]
        public virtual IQueryable<fn_orders_customer_Result> fn_orders_customer(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_orders_customer_Result>("[Cargo_system01Entities3].[fn_orders_customer](@customerid)", customeridParameter);
        }
    
        [DbFunction("Cargo_system01Entities3", "fn_orders_driver")]
        public virtual IQueryable<fn_orders_driver_Result> fn_orders_driver(Nullable<int> driverid)
        {
            var driveridParameter = driverid.HasValue ?
                new ObjectParameter("driverid", driverid) :
                new ObjectParameter("driverid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_orders_driver_Result>("[Cargo_system01Entities3].[fn_orders_driver](@driverid)", driveridParameter);
        }
    
        [DbFunction("Cargo_system01Entities3", "fn_orders_status")]
        public virtual IQueryable<fn_orders_status_Result> fn_orders_status(Nullable<int> statusid)
        {
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_orders_status_Result>("[Cargo_system01Entities3].[fn_orders_status](@statusid)", statusidParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_cartype_Result> sp_cartype(Nullable<int> cartypeid)
        {
            var cartypeidParameter = cartypeid.HasValue ?
                new ObjectParameter("cartypeid", cartypeid) :
                new ObjectParameter("cartypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_cartype_Result>("sp_cartype", cartypeidParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_orders_customer_Result> sp_orders_customer(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_orders_customer_Result>("sp_orders_customer", customeridParameter);
        }
    
        public virtual ObjectResult<sp_orders_driver_Result> sp_orders_driver(Nullable<int> driverid)
        {
            var driveridParameter = driverid.HasValue ?
                new ObjectParameter("driverid", driverid) :
                new ObjectParameter("driverid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_orders_driver_Result>("sp_orders_driver", driveridParameter);
        }
    
        public virtual ObjectResult<sp_orders_search_Result> sp_orders_search(string from_adr)
        {
            var from_adrParameter = from_adr != null ?
                new ObjectParameter("from_adr", from_adr) :
                new ObjectParameter("from_adr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_orders_search_Result>("sp_orders_search", from_adrParameter);
        }
    
        public virtual ObjectResult<sp_orders_status_Result> sp_orders_status(Nullable<int> statusid)
        {
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_orders_status_Result>("sp_orders_status", statusidParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
